This sample projects tests messages redistribution in a 2-nodes Artemis cluster when 2 shared durable consumers are consuming messages from a topic and clustered message grouping is enabled

custom-init-grouping-handler: 
A folder containing the files to generate a custom init-container for the artemis operator. The custom container will configure a local grouping handler for the first broker and a remote grouping handler for the second one. It will also configure connectors so that the broker can be accessed from outside kubernetes. 

k8s:
A folder containing a kustomization.yaml that sets up: the namespace, the broker cluster, a service to access the connector outside the cluster, a config map with extra mounts for logging.
The broker is configured:
- to enable persistence
- to have 2 nodes
- to have a custom init container that configures clustered message grouping and connector
- to specify that all addresses should have 5 group buckets, group rebalancing enabled, group rebalancing pause dispatch enabled and redistribution delay 0.


poc-artemis-message-grouping-with-redistribution:
A simple Java project that tests messages redistribution with and without message grouping

broker1.yaml and broker2.yaml:
The configuration for the nodes of the cluster as it is generated by the operator (includes the customization of connectors and the inclusion of local-grouping-handler.xml and remote-grouping-handler.xml.
